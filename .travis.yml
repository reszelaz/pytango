dist: xenial
language: python
branches:
  only:
    - stable
    - develop

env:
  global:
    - TANGO_DEPENDENCIES='cpptango==9.3.4 tango-test'
  matrix:
    - PYTHON_VERSION=2.7
    - PYTHON_VERSION=3.5
    - PYTHON_VERSION=3.6
    - PYTHON_VERSION=3.7
    - PYTHON_VERSION=3.8

cache:
  timeout: 300
  directories:
    - ./miniconda  # Conda environment
    - ./.eggs      # pytest eggs
    - ./build      # Build environment
    - ./cached_ext    # Previous extension

before_install:
  # Add conda to path
  - export PATH="$PWD/miniconda/bin:$PATH"
  # Install miniconda if not in cache
  - conda -V || wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - conda -V || bash miniconda.sh -b -p ./miniconda -f
  # Update conda
  - conda install --yes conda
  # Enable conda
  - source ./miniconda/etc/profile.d/conda.sh
  # Create build environment if it doesn't exist
  - conda activate buildenv || conda create --yes --name buildenv python=$PYTHON_VERSION
  # Activate build environment
  - conda activate buildenv
  # Pin python version
  - echo "python == $PYTHON_VERSION.*" > $CONDA_PREFIX/conda-meta/pinned

install:
  # Install build dependencies
  - conda install --yes -c main -c conda-forge boost gxx_linux-64 cppzmq numpy
  - conda install --yes -c main -c conda-forge -c tango-controls $TANGO_DEPENDENCIES
  # Use conda prefix as root for the dependencies
  - export BOOST_ROOT=$CONDA_PREFIX TANGO_ROOT=$CONDA_PREFIX ZMQ_ROOT=$CONDA_PREFIX OMNI_ROOT=$CONDA_PREFIX
  # Use custom boost python library name to work with newer naming scheme
  - export BOOST_PYTHON_LIB=boost_python${PYTHON_VERSION//./}

  # Uncomment the following line if the tests are running in parrallel
  # with pytest-xdist (see https://github.com/pytest-dev/pytest-xdist/issues/41):
  # - pip install -U pytest pytest-xdist six mock

before_script:
  # Make sure old_ext exists
  - mkdir -p cached_ext
  # Touch the .so files if the extension hasn't changed
  - diff -r cached_ext ext && find build -name _tango*.so -printf "touching %p\n" -exec touch {} + || true

script:
  # Build the package
  - python setup.py build
  # The build directory has been updated, cached_ext needs to be synchronized too
  - rsync -a --delete ext/ cached_ext/
  # Run the tests
  - python setup.py test
  # Kill all the hanging tango test processes
  - killall -9 TangoTest || true
